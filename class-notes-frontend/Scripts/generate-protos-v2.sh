#!/bin/bash

# gRPC-Swift v2 Proto Generation Script
# This script generates Swift protobuf and gRPC client code from proto files

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Script directory
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
FRONTEND_DIR="$( cd "$SCRIPT_DIR/.." && pwd )"
PROJECT_ROOT="/Users/jeremy/Code/class-notes-project"
BACKEND_DIR="$PROJECT_ROOT/class-notes-backend"

echo -e "${GREEN}gRPC-Swift v2 Proto Generation${NC}"
echo "Frontend directory: $FRONTEND_DIR"
echo "Backend directory: $BACKEND_DIR"

# Check if buf is installed
if ! command -v buf &> /dev/null; then
    echo -e "${RED}Error: buf is not installed${NC}"
    echo "Install buf from: https://docs.buf.build/installation"
    exit 1
fi

# Check if protoc-gen-swift is installed
if ! command -v protoc-gen-swift &> /dev/null; then
    echo -e "${YELLOW}Warning: protoc-gen-swift not found in PATH${NC}"
    echo "Installing Swift protobuf plugins..."
    
    # Install Swift protobuf plugins
    brew install swift-protobuf grpc-swift
fi

# Create output directory if it doesn't exist
OUTPUT_DIR="$FRONTEND_DIR/ClassNotes/Core/Networking/gRPC/Generated"
mkdir -p "$OUTPUT_DIR"

# Clean existing generated files
echo -e "${YELLOW}Cleaning existing generated files...${NC}"
rm -rf "$OUTPUT_DIR"/*.swift

# Change to backend directory where proto files are located
cd "$BACKEND_DIR"

# Check if buf.gen.yaml exists in frontend
if [ ! -f "$FRONTEND_DIR/buf.gen.yaml" ]; then
    echo -e "${RED}Error: buf.gen.yaml not found in $FRONTEND_DIR${NC}"
    echo "Creating default buf.gen.yaml..."
    
    cat > "$FRONTEND_DIR/buf.gen.yaml" << EOF
version: v1
managed:
  enabled: false
plugins:
  # Swift protobuf generation
  - plugin: swift
    out: ClassNotes/Core/Networking/gRPC/Generated
    opt:
      - Visibility=Public
      - FileNaming=DropPath
      - SwiftProtobufModuleName=SwiftProtobuf
  
  # gRPC-Swift v2 client generation
  - plugin: grpc-swift
    out: ClassNotes/Core/Networking/gRPC/Generated
    opt:
      - Visibility=Public
      - Client=true
      - Server=false
      - FileNaming=DropPath
      - UseProtobufModuleName=true
      - SwiftProtobufModuleName=SwiftProtobuf
EOF
fi

# Generate proto files
echo -e "${GREEN}Generating Swift protobuf and gRPC code...${NC}"

# Use buf to generate with the frontend's buf.gen.yaml
buf generate proto --template "$FRONTEND_DIR/buf.gen.yaml"

# Count generated files
GENERATED_COUNT=$(find "$OUTPUT_DIR" -name "*.swift" | wc -l | tr -d ' ')

if [ "$GENERATED_COUNT" -eq "0" ]; then
    echo -e "${RED}Error: No files were generated${NC}"
    exit 1
fi

echo -e "${GREEN}Successfully generated $GENERATED_COUNT Swift files${NC}"

# Add file headers to generated files
echo -e "${YELLOW}Adding file headers...${NC}"
for file in "$OUTPUT_DIR"/*.swift; do
    if [ -f "$file" ]; then
        # Create temp file with header
        cat > "$file.tmp" << EOF
//
// Generated by gRPC-Swift v2
// DO NOT EDIT - This file is automatically generated from proto definitions
//

EOF
        # Append original content
        cat "$file" >> "$file.tmp"
        # Replace original file
        mv "$file.tmp" "$file"
    fi
done

# Create a summary file
cat > "$OUTPUT_DIR/README.md" << EOF
# Generated gRPC Code

This directory contains automatically generated Swift code from protocol buffer definitions.

## Generated Files

- **\*_pb.swift** - Protocol buffer message definitions
- **\*_grpc.swift** - gRPC service client implementations

## Generation

To regenerate these files, run:

\`\`\`bash
cd $FRONTEND_DIR
./Scripts/generate-protos-v2.sh
\`\`\`

## Important

**DO NOT EDIT** these files manually. Any changes will be lost when the files are regenerated.

Generated on: $(date)
EOF

echo -e "${GREEN}Proto generation complete!${NC}"
echo ""
echo "Generated files are in: $OUTPUT_DIR"
echo ""
echo "Next steps:"
echo "1. Add generated files to your Xcode project"
echo "2. Ensure SwiftProtobuf is added as a dependency"
echo "3. Build and test your project" 